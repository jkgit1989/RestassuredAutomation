
public class HashCodeGenerator {
	
	public String BitMapToString(Bitmap bitmap) {
	    ByteArrayOutputStream baos = new ByteArrayOutputStream();
	    bitmap.compress(Bitmap.CompressFormat.PNG, 100, baos);
	    byte[] b = baos.toByteArray();
	    String temp = Base64.encodeToString(b, Base64.DEFAULT);
	    return temp;
	}
	
	public Bitmap StringToBitMap(String encodedString) {
	    try {
	        byte[] encodeByte = Base64.decode(encodedString, Base64.DEFAULT);
	        Bitmap bitmap = BitmapFactory.decodeByteArray(encodeByte, 0,
	                encodeByte.length);
	        return bitmap;
	    } catch (Exception e) {
	        e.getMessage();
	        return null;
	    }
	}
	
	public static void main(String[] args) throws Exception {
		/* Calculate hashcode
		 * s[0]*31^n-1+s[1]*31^n-2..........s[n]31*^n
		 */
		
		String name = "JITE";
		System.out.println("name: " + name + " & hashcode is : " + name.hashCode());

		int len = 0;
		char[] array = name.toCharArray();
		for (int i = 0; i < array.length; i++) {
			len++;
			if (array[i] == '\0') {
				throw new Exception("String terminator found & strig length is " + len);
			}
		}
	}
}

